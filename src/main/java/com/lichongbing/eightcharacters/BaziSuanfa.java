package com.lichongbing.eightcharacters;

import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * @author lichongbing
 * @email 873610008@qq.com
 * @date 2020/08/22 13:14
 * com.jsh.erp
 */
public class BaziSuanfa {

static String runyue []={"润五月小","润三月小","润八月小","润五月小","润四月小","润二月小","润七月小","润五月小","","","","","","","","","","",""};
    static long jie [] ={
            19700204,19700306,19700405,19700506,19700606,19700707,19700808,19700908,19701009,19701108,19701207,19710106,
            19710204,19710306,19710405,19710506,19710606,19710707,19710808,19710908,19711009,19711108,19711207,19720106,
            19720204,19720306,19720405,19720506,19720606,19720707,19720808,19720908,19721009,19721108,19721207,19730106,
            19730204,19730306,19730405,19730506,19730606,19730707,19730808,19730908,19731009,19731108,19731207,19740106,
            19740204,19740306,19740405,19740506,19740606,19740707,19740808,19740908,19741009,19741108,19741207,19750106,
            19750204,19750306,19750405,19750506,19750606,19750707,19750808,19750908,19751009,19751108,19751207,19760106,
            19760204,19760306,19760405,19760506,19760606,19760707,19760808,19760908,19761009,19761108,19761207,19770106,
            19770204,19770306,19770405,19770506,19770606,19770707,19770808,19770908,19771009,19771108,19771207,19780106,
            19780204,19780306,19780405,19780506,19780606,19780707,19780808,19780908,19781009,19781108,19781207,19780106,
            19780204,19780306,19780405,19780506,19780606,19780707,19780808,19780908,19781009,19781108,19781207,19790106,
            19790204,19790306,19790405,19790506,19790606,19790707,19790808,19790908,19791009,19791108,19791207,19800106,
            19800204,19800306,19800405,19800506,19800606,19800707,19800808,19800908,19801009,19801108,19801207,19810106,
            19810204,19810306,19810405,19810506,19810606,19810707,19810808,19810908,19811009,19811108,19811207,19820106,
            19820204,19820306,19820405,19820506,19820606,19820707,19820808,19820908,19821009,19821108,19821207,19830106,
            19830204,19830306,19830405,19830506,19830606,19830707,19830808,19830908,19831009,19831108,19831207,19840106,
            19840204,19840306,19840405,19840506,19840606,19840707,19840808,19840908,19841009,19841108,19841207,19860106,
            19860204,19860306,19860405,19860506,19860606,19860707,19860808,19860908,19861009,19861108,19861207,19870106,
            19870204,19870306,19870405,19870506,19870606,19870707,19870808,19870908,19871009,19871108,19871207,19880106,
            19880204,19880306,19880405,19880506,19880606,19880707,19880808,19880908,19881009,19881108,19881207,19890106,
            19890204,19890306,19890405,19890506,19890606,19890707,19890808,19890908,19891009,19891108,19891207,19900106,
            19900204,19900306,19900405,19900506,19900606,19900707,19900808,19900908,19901009,19901108,19901207,19910106,
            19910204,19910306,19910405,19910506,19910606,19910707,19910808,19910908,19911009,19911108,19911207,19920106,
            19920204,19920306,19920404,19920505,19920607,19920707,19920807,19920907,19921008,19921108,19921207,19930106,
            19930204,19930306,19930405,19930506,19930606,19930707,19930808,19930908,19931009,19931108,19931207,19940106,
            19940204,19940306,19940405,19940506,19940606,19940707,19940808,19940908,19941009,19941108,19941207,19950106,
            19950204,19950306,19950405,19950506,19950606,19950707,19950808,19950908,19951009,19951108,19951207,19960106,
            19960204,19960306,19960405,19960506,19960606,19960707,19960808,19960908,19961009,19961108,19961207,19970106,
            19970204,19970306,19970405,19970506,19970606,19970707,19970808,19970908,19971009,19971108,19971207,19980106,
            19980204,19980306,19980405,19980506,19980606,19980707,19980808,19980908,19981009,19981108,19981207,19990106,
            19990204,19990306,19990405,19990506,19990606,19990707,19990808,19990908,19991009,19991108,19991207,20000106,
            20000204,20000306,20000405,20000506,20000606,20000707,20000808,20000908,20001009,20001108,20001207,20010105,
            20010204,20010306,20010405,20010506,20010606,20010707,20010808,20010908,20011009,20011108,20011207,20020105,
            20020204,20020306,20020405,20020506,20020606,20020707,20020808,20020908,20021009,20021108,20021207,20030106,
            20030204,20030306,20030405,20030506,20030606,20030707,20030808,20030908,20031009,20031108,20031207,20040105,
            20040204,20040306,20040405,20040506,20040606,20040707,20040808,20040908,20041009,20041108,20041207,20050105,
            20050204,20050306,20050405,20050506,20050606,20050707,20050808,20050908,20051009,20051108,20051207,20060105,
            20060204,20060306,20060405,20060506,20060606,20060707,20060808,20060908,20061009,20061108,20061207,20070105,
            20070204,20070306,20070405,20070506,20070606,20070707,20070808,20070908,20071009,20071108,20071207,20080106,
            20080204,20080306,20080405,20080506,20080606,20080707,20080808,20080908,20081009,20081108,20081207,20090105,
            20090204,20090306,20090405,20090506,20090606,20090707,20090808,20090908,20091009,20091108,20091207,20100105,
            20100204,20100306,20100405,20100506,20100606,20100707,20100808,20100908,20101009,20101108,20101207,20110106,
            20110204,20110306,20110405,20110506,20110606,20110707,20110808,20110908,20111009,20111108,20111207,20120106,
            20120204,20120306,20120405,20120506,20120606,20120707,20120808,20120908,20121009,20121108,20121207,20130105,
            20130204,20130306,20130405,20130506,20130606,20130707,20130808,20130908,20131009,20131108,20131207,20140105,
            20140204,20140306,20140405,20140506,20140606,20140707,20140808,20140908,20141009,20141108,20141207,20150106,
            20150204,20150306,20150405,20150506,20150606,20150707,20150808,20150908,20151009,20151108,20151207,20160106,
            20160204,20160306,20160405,20160506,20160606,20160707,20160808,20160908,20161009,20161108,20161207,20170105,
            20170203,20170305,20170404,20170506,20170606,20170707,20170808,20170908,20171009,20171108,20171207,20180105,
            20180204,20180306,20180405,20180506,20180606,20180707,20180808,20180908,20181009,20181108,20181207,20190105,
            20190204,20190306,20190405,20190506,20190606,20190707,20190808,20190908,20191009,20191108,20191207,20200105,
            20200204,20200306,20200405,20200506,20200606,20200707,20200808,20200908,20201009,20201108,20201207,20210105};
    static String[] liushijiazi = new String[]{"甲子","乙丑","丙寅","丁卯","戊辰","己巳","庚午","辛未","壬申","癸酉","甲戌","乙亥","丙子","丁丑","戊寅","己卯","庚辰","辛巳","壬午","癸未","甲申","乙酉","丙戌","丁亥","戊子","己丑","庚寅","辛卯","壬辰","癸巳","甲午","乙未","丙申","丁酉","戊戌","己亥","庚子","辛丑","壬寅","癸卯","甲辰","乙巳","丙午","丁未","戊申","己酉","庚戌","辛亥","壬子","癸丑","甲寅","乙卯","丙辰","丁巳","戊午","己未","庚申","辛酉","壬戌","癸亥"};

    public  static int test(int idate){
        int k;
        for (k = 0; k < jie.length; k++) {
            if (idate > jie[k] ) {
                k=k;
            } else {
                break;
            }
        }
        return k;
    }
    /*
     *计算time2减去time1的差值 差值只设置 几天 几个小时 或 几分钟
     * 根据差值返回多长之间前或多长时间后
     * */
    public static long getDistanceDays(long time1, long time2) {
        long day = 0;
        long hour = 0;
        long min = 0;
        long sec = 0;
        long diff;

        if (time1 < time2) {
            diff = time2 - time1;
        } else {
            diff = time1 - time2;
        }
        day = diff / (24 * 60 * 60 );
//        hour = (diff / (60 * 60 * 1000) - day * 24);
//        min = ((diff / (60 * 1000)) - day * 24 * 60 - hour * 60);
//        sec = (diff / 1000 - day * 24 * 60 * 60 - hour * 60 * 60 - min * 60);
        if (day != 0) return day;
//        if (hour != 0) return hour + "小时"+ min + "分钟" + sec + "秒";
//        if (min != 0) return min + "分钟" + sec + "秒";
//        if (sec != 0) return sec + "秒" ;
        return day;
    }
    public static long getDistenceTwoHous(long time1, long time2){
        /*
         *
         *
         */
        long twohour = 0;
        long diff;
        if (time1 < time2) {
            diff = time2 - time1;
        } else {
            diff = time1 - time2;
        }
        twohour = (long) Math.ceil(diff / (2 * 60 * 60 ));
        if (twohour != 0) return twohour;
        return twohour;
    }
    public  String  getEightCharacters(String birtdatFormate){

    /*
    *
    *
    */
        long time = new Date(birtdatFormate).getTime()+28800000;
        long showtime = new Date(birtdatFormate).getTime();
        SimpleDateFormat sdfs = new SimpleDateFormat("yyyyMMddHHmmss");
        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
        System.out.println("输入的出生日期：" + sdfs.format(showtime));
        int idate=Integer.parseInt(sdf.format(time));
        /*
        日柱算法
         */
        double days =Math.ceil(getDistanceDays(0,time/1000));
//        System.out.println(b);
        int c = (int) ((days+17) % 60);
//        System.out.println(c);
        String rizhu=liushijiazi[c];
//        System.out.println(rizhu);
//        int l=jie.length;
//        System.out.println(l);
//        int positon = Arrays.binarySearch(jie, 19700105);
//        System.out.println(positon);
        /*
        时柱算法
         */
        long s = getDistenceTwoHous(0, time / 1000);
        int ts= (int) Math.ceil((s+25)%60);
        String shizhu=liushijiazi[ts];
//        System.out.println(shizhu);
        /*
        月柱算法
         */
        int jiaziindex=(test(idate)+13)%60;
        int yuezhuindex=jiaziindex;
//        System.out.println(jiaziindex);
        String yuezhu=liushijiazi[yuezhuindex];
//        System.out.println(yuezhu);
        /*
        年柱算法
         */
        double year_num =Math.floor((test(idate)-1)/12);
        //  double year_num = (Math.floor(getDistanceDays(0,time/1000))-34)/365.25;
//        System.out.println(year_num);
        int nianzhu_index= (int) ((year_num+46)%60);
        String nianzhu =liushijiazi[nianzhu_index];
//        System.out.println(nianzhu);
       // System.out.println("输出的年月日天干地支：" +nianzhu+yuezhu+rizhu+shizhu);
        //System.out.println(nianzhu.substring(0,1));
        //System.out.println(nianzhu.substring(1,2));
        return nianzhu+yuezhu+rizhu+shizhu;



    }
//    public static void main(String[] args) {
//        String scan="1997/9/1 12:12:22";
//        long time = new Date(scan).getTime()+28800000;
//        long showtime = new Date(scan).getTime();
//        SimpleDateFormat sdfs = new SimpleDateFormat("yyyyMMddHHmmss");
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
//        System.out.println("输入的出生日期：" + sdfs.format(showtime));
//        int idate=Integer.parseInt(sdf.format(time));
//        /*
//        日柱算法
//         */
//        double days =Math.ceil(getDistanceDays(0,time/1000));
////        System.out.println(b);
//        int c = (int) ((days+17) % 60);
////        System.out.println(c);
//        String rizhu=liushijiazi[c];
////        System.out.println(rizhu);
////        int l=jie.length;
////        System.out.println(l);
////        int positon = Arrays.binarySearch(jie, 19700105);
////        System.out.println(positon);
//        /*
//        时柱算法
//         */
//        long s = getDistenceTwoHous(0, time / 1000);
//        int ts= (int) Math.ceil((s+25)%60);
//        String shizhu=liushijiazi[ts];
////        System.out.println(shizhu);
//        /*
//        月柱算法
//         */
//        int jiaziindex=(test(idate)+13)%60;
//        int yuezhuindex=jiaziindex;
////        System.out.println(jiaziindex);
//        String yuezhu=liushijiazi[yuezhuindex];
////        System.out.println(yuezhu);
//        /*
//        年柱算法
//         */
//      double year_num =Math.floor((test(idate)-1)/12);
//      //  double year_num = (Math.floor(getDistanceDays(0,time/1000))-34)/365.25;
////        System.out.println(year_num);
//        int nianzhu_index= (int) ((year_num+46)%60);
//        String nianzhu =liushijiazi[nianzhu_index];
////        System.out.println(nianzhu);
//        System.out.println("输出的年月日天干地支：" +nianzhu+yuezhu+rizhu+shizhu);
//        System.out.println(nianzhu.substring(0,1));
//        System.out.println(nianzhu.substring(1,2));
//        String eightCharacters = getEightCharacters("1997/9/1 12:12:22");
//        System.out.println(eightCharacters);
//    }
}
